name: Deploy LEMP Stack with WordPress

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository files
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up SSH key for EC2 access
      - name: Set up SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 3: Install necessary tools
      - name: Install necessary tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl unzip rsync

      # Step 4: Add EC2 instance to known_hosts to avoid SSH host verification
      - name: Add EC2 instance to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      # Step 5: Remove all files in the target directory and copy new files
      - name: Remove all files and copy new files to EC2 instance
        run: |
          echo "Removing all files from the target directory on EC2..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            # Remove all files and directories in the target directory
            rm -rf /home/${{ secrets.REMOTE_USER }}/*
          EOF
          
          echo "Copying new repository files to the EC2 instance..."
          rsync -avz --exclude '.git' ./ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/

      # Step 6: Remove existing WordPress folder and copy the new one
      - name: Remove existing WordPress folder and copy new one
        run: |
          echo "Checking if WordPress folder exists and removing it if necessary..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            if [ -d "/var/www/wordpress" ]; then
              echo "Removing existing WordPress folder..."
              sudo rm -rf /var/www/wordpress
            fi
            echo "Copying new WordPress folder..."
            sudo cp -r /home/${{ secrets.REMOTE_USER }}/wordpress /var/www/
            sudo chown -R www-data:www-data /var/www/wordpress/wp-content
            sudo chmod -R 755 /var/www/wordpress/wp-content
          EOF

      # Step 7: Run the deploy.sh script on EC2
      - name: Run deployment script
        run: |
          echo "Running deploy.sh script on EC2..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'bash /home/${{ secrets.REMOTE_USER }}/deploy.sh'

      # Step 8: Clean up
      - name: Clean up
        run: |
          echo "Deployment completed successfully!"
